name: Build & Test
on:
    workflow_call:
        secrets:
            # required when `sonarCloudEnabled`
            SONAR_TOKEN:
                required: false
        inputs:
            # -----------------
            # System & Versions
            # -----------------
            goVersion:
                type: string
                default: 1.19
            osVariant:
                type: string
                default: "ubuntu-22.04"

            # -----------------
            # Produced artifact
            # -----------------
            binaryName:
                type: string
                required: true
            intermediateArtifactsPath:
                description: "Directory, where build artifacts copied between job stages are kept"
                type: string
                default: ".build/"

            # -------
            # Testing
            # -------
            sonarCloudEnabled:
                type: boolean
                default: false
            dockerReleasingEnabled:
                type: boolean
                default: true
            testReportEnabled:
                type: boolean
                default: false
            testReportPattern:
                type: string
                default: "junit.xml"
            coverageReportEnabled:
                type: boolean
                default: false
            coverageReportPath:
                type: string
                default: "coverage.out"

            testCmd:
                type: string
                default: "make test"

            buildCmd:
                type: string
                default: "make build"

jobs:
    build:
        runs-on: ${{ inputs.osVariant }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: ${{ inputs.goVersion }}

            - name: Setup Golang caches
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-golang-

            - name: Build
              run: "${{ inputs.buildCmd }}"

            - name: Test
              if: "!contains(github.event.head_commit.message, '!test skip')"
              run: "${{ inputs.testCmd }}"

            - name: SonarCloud Scan
              uses: sonarsource/sonarcloud-github-action@master
              if: github.ref == 'refs/heads/main' && inputs.sonarCloudEnabled && !contains(github.event.head_commit.message, '!sonar skip')
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            - uses: actions/upload-artifact@v3
              with:
                  name: binary
                  path: ${{ inputs.intermediateArtifactsPath }}/${{ inputs.binaryName }}

            - name: Test report
              if: always() && inputs.testReportEnabled && !contains(github.event.head_commit.message, '!test skip')
              uses: phoenix-actions/test-reporting@v8
              with:
                  name: Tests
                  path: ${{ inputs.testReportPattern }}
                  reporter: java-junit

            - name: Coverage report
              if: always() && !contains(github.event.pull_request.user.login, 'dependabot[bot]') && inputs.coverageReportEnabled && !contains(github.event.head_commit.message, '!test skip')
              uses: slavcodev/coverage-monitor-action@v1
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  coverage_path: ${{ inputs.coverageReportPath }}
